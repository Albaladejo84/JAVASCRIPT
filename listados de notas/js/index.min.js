"use strict";

function _instanceof(t, e) {
    return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](t) : t instanceof e
}

function _classCallCheck(t, e) {
    if (!_instanceof(t, e))
        throw new TypeError("Cannot call a class as a function")
}

function _defineProperties(t, e) {
    for (var a = 0; a < e.length; a++) {
        var n = e[a];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)
    }
}

function _createClass(t, e, a) {
    return e && _defineProperties(t.prototype, e), a && _defineProperties(t, a), t
}

var script = document.createElement("script");
script.src = "./js/app.js",
    script.setAttributeNode(document.createAttribute("defer")),
    document.querySelector("head").appendChild(script);

var NOTACORTE = 3.99,
    App = function() {
        function t() {
            _classCallCheck(this, t),
                this.aulas = ["a", "b", "c"],
                this.notas = [
                    { aula: "a", nombre: "Rafael", apellido: "Reche", nota: 2.98 },
                    { aula: "a", nombre: "Esteban", apellido: "Prieto", nota: 3.5 },
                    { aula: "b", nombre: "Raul", apellido: "Osorio", nota: 5 },
                    { aula: "b", nombre: "Amine", apellido: "Bouatay", nota: 4 },
                    { aula: "c", nombre: "Juan Jesús", apellido: "Díaz", nota: 2 },
                    { aula: "c", nombre: "Ismael", apellido: "Lanchas", nota: 5.3 }
                ],
                this.notasAulas = this.getNotasAulas(),
                this.pintaNotasAulas(),
                this.pintaTotalesAulas(),
                this.pintaTotales()
        }
        return _createClass(t, [{
                key: "isApto",
                value: function(t) {
                    return t >= NOTACORTE
                }
            },
            {
                key: "getNotasAulas",
                value: function() {
                    var t = {},
                        e = !0,
                        a = !1,
                        n = void 0;
                    try {
                        for (var o, r = this.aulas[Symbol.iterator](); !(e = (o = r.next()).done); e = !0) {
                            var l = o.value;
                            t[l] = this.getNotasAula(l)
                        }
                    } catch (t) {
                        a = !0, n = t
                    } finally {
                        try {
                            e || null == r.return || r.return()
                        } finally {
                            if (a) throw n
                        }
                    }
                    return t
                }
            },
            {
                key: "getNotasAula",
                value: function(t) {
                    return this.notas.filter(function(e) {
                        return e.aula === t
                    })
                }
            },
            {
                key: "pintaNotasAula",
                value: function(t) {
                    var e = document.querySelector('[data-aula="'.concat(t, '"]')).querySelector(".lista-notas tbody"),
                        a = e.querySelector(".nota-base"),
                        n = e.querySelectorAll("tr"),
                        o = !0,
                        r = !1,
                        l = void 0;
                    try { for (var i, u = n[Symbol.iterator](); !(o = (i = u.next()).done); o = !0) { i.value.remove() } } catch (t) { r = !0, l = t } finally { try { o || null == u.return || u.return() } finally { if (r) throw l } }
                    var s = !0,
                        c = !1,
                        f = void 0;
                    try { for (var y, h = this.notasAulas[t][Symbol.iterator](); !(s = (y = h.next()).done); s = !0) { var d = y.value,
                                p = a.cloneNode(!0);
                            e.appendChild(p), p.querySelector(".alumno-nombre").textContent = d.nombre, p.querySelector(".alumno-apellido").textContent = d.apellido, p.querySelector(".alumno-nota").textContent = d.nota, this.isApto(d.nota) ? p.classList.add("table-success") : p.classList.add("table-danger") } } catch (t) { c = !0, f = t } finally { try { s || null == h.return || h.return() } finally { if (c) throw f } }
                }
            }, { key: "pintaNotasAulas", value: function() { var t = !0,
                        e = !1,
                        a = void 0; try { for (var n, o = this.aulas[Symbol.iterator](); !(t = (n = o.next()).done); t = !0) { var r = n.value;
                            this.pintaNotasAula(r) } } catch (t) { e = !0, a = t } finally { try { t || null == o.return || o.return() } finally { if (e) throw a } } } }, { key: "pintaTotales", value: function() { var t = document.querySelector(".totales-globales"),
                        e = t.querySelector(".nota-media"),
                        a = t.querySelector(".nota-maxima"),
                        n = t.querySelector(".aprobados"),
                        o = t.querySelector(".suspensos");
                    e.textContent = this.getMediaTotal().toFixed(2), a.textContent = this.getNotaMaximaTotal(); var r = this.getAprobadosTotal(),
                        l = r / this.notas.length * 100;
                    n.textContent = "".concat(r, " (").concat(l.toFixed(2), "%)"); var i = this.notas.length - r,
                        u = i / this.notas.length * 100;
                    o.textContent = "".concat(i, " (").concat(u.toFixed(2), "%)") } }, { key: "getMediaTotal", value: function() { return this.notas.reduce(function(t, e) { return t + e.nota }, 0) / this.notas.length } }, { key: "getAprobadosTotal", value: function() { return this.notas.filter(function(t) { return t.nota >= NOTACORTE }).length } }, { key: "getNotaMaximaTotal", value: function() { return this.notas.reduce(function(t, e) { return e.nota > t ? e.nota : t }, 0) } }, { key: "getAptos", value: function() { return this.notas.filter(function(t) { return t.nota >= NOTACORTE }).length } }, { key: "pintaTotalesAula", value: function(t) { var e = document.querySelector('[data-aula="'.concat(t, '"]')).querySelector(".totales"),
                        a = e.querySelector(".nota-maxima"),
                        n = e.querySelector(".nota-maxima-status"),
                        o = this.getNotaMaximaAula(t);
                    a.textContent = o, this.isApto(o) ? n.classList.add("fa-smile", "icono-ok") : n.classList.add("fa-frown", "icono-no-ok"); var r = e.querySelector(".aprobados"),
                        l = e.querySelector(".suspensos"),
                        i = this.getAprobadosAula(t),
                        u = i / this.notasAulas[t].length * 100,
                        s = this.notasAulas[t].length - i,
                        c = s / this.notasAulas[t].length * 100;
                    r.textContent = "".concat(i, " (").concat(u, "%)"), l.textContent = "".concat(s, " (").concat(c, "%)") } }, { key: "pintaTotalesAulas", value: function() { var t = !0,
                        e = !1,
                        a = void 0; try { for (var n, o = this.aulas[Symbol.iterator](); !(t = (n = o.next()).done); t = !0) { var r = n.value;
                            this.pintaTotalesAula(r) } } catch (t) { e = !0, a = t } finally { try { t || null == o.return || o.return() } finally { if (e) throw a } } } }, { key: "getNotaMaximaAula", value: function(t) { return this.notasAulas[t].reduce(function(t, e) { return e.nota > t ? e.nota : t }, 0) } }, { key: "getAprobadosAula", value: function(t) { return this.notasAulas[t].filter(function(t) { return t.nota >= NOTACORTE }).length } }
        ]), t
    }();